Коллеги, здравствуйте, рад всех приветствовать на четвёртом уроке по основам языка С.

На этом уроке мы познакомимся с таким базовым понятием программирования, как циклы.
Цикл - это одно или несколько действий повторяющихся до тех пор пока не наступит условие
прекращающее эти действия.

Базовый цикл в языке С записывается при помощи ключевого слова while после которого в
круглых скобках пишется условие. При истинности данного условия будет выполняться тело
цикла, которое в свою очередь пишется в фигурных скобках.

Выведем на экран все числа в заданном промежутке, границы которого мы обозначим как а и
б. Для этого нам необходимо их инициализировать и пока а меньше б заходить в тело цикла
где мы будем выводить на экран и инкрементировать Меньшее число, пока оно не станет
равным второму. Как только числа сравняются условие входа в тело цикла перестанет быть
истинным и мы не зайдём в него оказавшись на следующей после тела цикла строке. Один
проход тела цикла называется итерацией.

Для примера подсчитаем сколько чётных чисел на промежутке от a до b. для этого нам
понадобится циклически пройтись по всем числам от а до б и в каждой итерации цикла (то
есть для каждого числа) сделать проверку, является-ли число чётным. Если является -
увеличить счётчик положительных чисел для заданного промежутка. Цикл while используется
когда мы не можем достоверно сказать сколько итераций нам понадобится выполнить.
Данный цикл, по очевидным причинам, попадает в категорию циклов с предусловием. Сначала
программа проверяет условие, затем по результатам этой проверки либо выполняет либо не
выполняет тело цикла.

Ну а раз есть циклы с предусловием, то логично предположить наличие
циклов с постусловием. Как ни удивительно, в языке С есть и такой.
Это разновидность цикла while, который записывается как do {} while (); В этой конструкции
сначала выполнится тело цикла, и только потом будет принято решение нужно ли выполнять его
снова. Широко применяется для проверки пользовательского ввода до получения приемлемого
результата и для ожидания ответов на запросы. Например, мы пишем калькулятор, и знаем, что
числа нельзя делить на ноль. Предположим, что наш пользователь этого не знает. Что-ж,
будем предлагать пользователю ввести делитель, пока он не введёт что-то отличное от нуля.
Если пользовательский ввод равен нулю значит нам нужно спросить его снова. Это и будет
условием для очередной итерации цикла. Очевидно, например, что было бы глупо сравнивать с
чем-то пользовательский ответ, не задав вопрос. Когда пользователь введёт удовлетворяющее
нашему условию число произведём необходимые подсчёты и выведем их результаты в консоль.

С помощью циклов в программировании выполняются все рутинные задачи, такие как поиск
значений в больших наборах данных, создание разного рода прогрессий, построение графиков,
сортировки, ожидание ответов на запросы, чтение потоков данных и многие другие.

До встречи на следующем уроке.


### Домашнее задание ###
/*
 * 3. Циклы.
 * Запросить у пользователя десять чисел. Вывести на экран среднее арифметическое
 * введённых чисел.
 */
void work_number_one() {
	// 3. Cycles mean()
	const int NUMS_TO_ASK = 10;
	int i = 0;
	float total = 0;
	do {
		printf("Enter a number: ");
		scanf("%d", &input);
		total += input;
	} while (++i < NUMS_TO_ASK);
	printf("The mean of entered numbers is: %.2f\n", total / i);
}
